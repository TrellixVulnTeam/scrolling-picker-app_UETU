{"ast":null,"code":"export const getRandomInt = max => {\n  let random = Math.floor(Math.random() * max);\n  return random;\n};\nexport const calculateSpinnerDistance = (currentName, selectedName) => {\n  let currentNamePosition = staticNameArray.indexOf(currentName);\n  let selectedNamePosition = staticNameArray.indexOf(selectedName);\n  let distanceToTravel = currentNamePosition - selectedNamePosition;\n\n  if (distanceToTravel === 0) {\n    moveDistance = staticNameArray.length * 50 * rotations;\n  }\n\n  if (distanceToTravel < 0) {\n    moveDistance = Math.abs((distanceToTravel + staticNameArray.length) * 50 + staticNameArray.length * 50 * rotations);\n  }\n\n  if (distanceToTravel > 0) {\n    moveDistance = Math.abs(distanceToTravel * 50 + staticNameArray.length * 50 * rotations);\n  }\n};","map":{"version":3,"sources":["/Users/balthazarely/Development/scrolling-picker-app/src/utls.jsx"],"names":["getRandomInt","max","random","Math","floor","calculateSpinnerDistance","currentName","selectedName","currentNamePosition","staticNameArray","indexOf","selectedNamePosition","distanceToTravel","moveDistance","length","rotations","abs"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,GAAD,IAAS;AACnC,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBD,GAA3B,CAAb;AACA,SAAOC,MAAP;AACD,CAHM;AAKP,OAAO,MAAMG,wBAAwB,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACrE,MAAIC,mBAAmB,GAAGC,eAAe,CAACC,OAAhB,CAAwBJ,WAAxB,CAA1B;AACA,MAAIK,oBAAoB,GAAGF,eAAe,CAACC,OAAhB,CAAwBH,YAAxB,CAA3B;AACA,MAAIK,gBAAgB,GAAGJ,mBAAmB,GAAGG,oBAA7C;;AACA,MAAIC,gBAAgB,KAAK,CAAzB,EAA4B;AAC1BC,IAAAA,YAAY,GAAGJ,eAAe,CAACK,MAAhB,GAAyB,EAAzB,GAA8BC,SAA7C;AACD;;AACD,MAAIH,gBAAgB,GAAG,CAAvB,EAA0B;AACxBC,IAAAA,YAAY,GAAGV,IAAI,CAACa,GAAL,CACb,CAACJ,gBAAgB,GAAGH,eAAe,CAACK,MAApC,IAA8C,EAA9C,GACEL,eAAe,CAACK,MAAhB,GAAyB,EAAzB,GAA8BC,SAFnB,CAAf;AAID;;AACD,MAAIH,gBAAgB,GAAG,CAAvB,EAA0B;AACxBC,IAAAA,YAAY,GAAGV,IAAI,CAACa,GAAL,CACbJ,gBAAgB,GAAG,EAAnB,GAAwBH,eAAe,CAACK,MAAhB,GAAyB,EAAzB,GAA8BC,SADzC,CAAf;AAGD;AACF,CAlBM","sourcesContent":["export const getRandomInt = (max) => {\n  let random = Math.floor(Math.random() * max);\n  return random;\n};\n\nexport const calculateSpinnerDistance = (currentName, selectedName) => {\n  let currentNamePosition = staticNameArray.indexOf(currentName);\n  let selectedNamePosition = staticNameArray.indexOf(selectedName);\n  let distanceToTravel = currentNamePosition - selectedNamePosition;\n  if (distanceToTravel === 0) {\n    moveDistance = staticNameArray.length * 50 * rotations;\n  }\n  if (distanceToTravel < 0) {\n    moveDistance = Math.abs(\n      (distanceToTravel + staticNameArray.length) * 50 +\n        staticNameArray.length * 50 * rotations\n    );\n  }\n  if (distanceToTravel > 0) {\n    moveDistance = Math.abs(\n      distanceToTravel * 50 + staticNameArray.length * 50 * rotations\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}